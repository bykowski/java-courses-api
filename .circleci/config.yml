version: 2
jobs: #pipline
  build: #pierwszy musi byc bild

    working_directory: ~/java-courses-api # ciezka do projektu

    docker: #stawia niezalezne srodowisko
    - image: circleci/openjdk:8-jdk
      environment:
        JDBC_DATABASE_URL: jdbc:postgresql://127.0.0.1/testdb4
        JDBC_DATABASE_USERNAME: root
        JDBC_DATABASE_PASSWORD: root


    - image: circleci/postgres/9.5-alpine-postgis-ram
      environment:
        POSTGRES_DB: testdb4


    steps: #kroki
    - checkout #pobieranie

    - run: mvn dependency:go-offline #zaciaganie zaleznosci
    - run: mvn test # testy w java

#  deploy:
#    docker:
#    - image: buildpack-deps:trusty
#
#    steps:
#    - checkout
#    - run:
#        name: Deploying app on heroku
#        command: |
#          git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
#        #workflows:
#  version: 2
#  build-deploy:
#    jobs:
#    - build
#    - deploy:
#        requires:
#        - build


#workflows:
#  version: 2
#  build-deploy:
#    jobs:
#    - build
#    - hold:
#        type: approval
#        requires:
#        - build  #job będzie aktywny tylko w momencie gdy superbuild będzie miał status SUCCESS
#    - deploy:
#        requires:
#        - hold  # proces wdrożenia rozpocznie się tylko w sytuacji, gdy manualnie zatwierdzimy go na stronie CircleCI
#
#
